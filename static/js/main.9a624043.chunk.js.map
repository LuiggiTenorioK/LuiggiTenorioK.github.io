{"version":3,"sources":["logo.svg","views/Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","handleClickScroll","element_id","element","document","getElementById","scrollIntoView","behavior","title","Navbar","expand","Container","className","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","Row","Col","src","style","height","backgroundColor","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,sSCMtBC,G,wNAMjBC,kBAAoB,SAACC,GACjB,IAAMC,EAAUC,SAASC,eAAeH,GACpCC,GAEAA,EAAQG,eAAe,CAAEC,SAAU,Y,kEAPvCH,SAASI,MAAQ,uC,+BAYX,IAAD,OACL,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACC,EAAA,EAAD,CAAWC,UAAU,QACjB,kBAACH,EAAA,EAAOI,MAAR,KAAc,4BAAQD,UAAU,kBAAlB,aACd,kBAACH,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,wBAAwBL,UAAU,uBAClD,kBAACM,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIC,KAAL,CAAUC,QAAS,kBAAM,EAAKnB,kBAAkB,cAAhD,gBAShB,yBAAKW,UAAU,QACX,kBAACD,EAAA,EAAD,CAAWC,UAAU,OACjB,kBAACS,EAAA,EAAD,CAAKT,UAAU,QACX,kBAACU,EAAA,EAAD,CAAKV,UAAU,qCACX,yBAAKA,UAAU,mCAAf,2CAGA,yBAAKA,UAAU,oBAAf,kEAIJ,kBAACU,EAAA,EAAD,CAAKV,UAAU,+BACX,yBAAKW,IAA8B,eAAgBC,MAAO,CAAEC,OAAQ,eASpF,yBAAKR,GAAG,WAAWO,MAAO,CAAEE,gBAAiB,yBACzC,kBAACf,EAAA,EAAD,CAAWC,UAAU,OACjB,kBAACS,EAAA,EAAD,CAAKT,UAAU,0BAEX,kBAACU,EAAA,EAAD,CAAKV,UAAU,cACX,yBAAKA,UAAU,8CAAf,qCAGA,yBAAKA,UAAU,+BAAf,4O,GA9DKe,IAAMC,YCU5BC,MARf,WACI,OACI,kBAAC,EAAD,OCEYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASC,eAAe,SDyHpB,kBAAmBiC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9a624043.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport { Col, Container, Nav, Navbar, Row } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Landing.css'\r\nimport logo from '../logo.svg'\r\n\r\nexport default class Landing extends React.Component {\r\n\r\n    componentDidMount() {\r\n        document.title = \"Luiggi Tenorio | Software Engineer\"\r\n    }\r\n\r\n    handleClickScroll = (element_id) => {\r\n        const element = document.getElementById(element_id);\r\n        if (element) {\r\n            // ðŸ‘‡ Will scroll smoothly to the top of the next section\r\n            element.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar expand=\"lg\">\r\n                    <Container className='my-4'>\r\n                        <Navbar.Brand><strong className='fw-bolder fs-1'>lbit.dev</strong></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\" className='justify-content-end'>\r\n                            <Nav>\r\n                                <Nav.Link onClick={() => this.handleClickScroll(\"about-me\")}>about me</Nav.Link>\r\n                                {/* <Nav.Link>projects</Nav.Link> */}\r\n                            </Nav>\r\n\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n\r\n\r\n                <div className='my-5'>\r\n                    <Container className='p-2'>\r\n                        <Row className='mb-4'>\r\n                            <Col className='col-12 col-lg-6 align-self-center'>\r\n                                <div className='fw-bolder fs-2 text-center mb-3'>\r\n                                    A Software Engineer and Data Enthusiast\r\n                                </div>\r\n                                <div className='fs-3 text-center'>\r\n                                    Design and develop applications are my passions, then I exist\r\n                                </div>\r\n                            </Col>\r\n                            <Col className='col-12 col-lg-6 text-center'>\r\n                                <img src={process.env.PUBLIC_URL + '/logo512.png'} style={{ height: \"300px\" }}></img>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div id=\"about-me\" style={{ backgroundColor: \"var(--color-primary)\" }}>\r\n                    <Container className='p-5'>\r\n                        <Row className='justify-content-center'>\r\n\r\n                            <Col className='col-8 my-4'>\r\n                                <div className='fw-bolder fs-2 text-center mb-4 text-white'>\r\n                                    Hi! I'm Luiggi. Nice to meet you.\r\n                                </div>\r\n                                <div className='fs-5 text-center text-white'>\r\n                                    Professional with more than 2 years of experience in Software Engineering and 1 year in Data Engineering. Master's Student in Computer Engineering and Full-Stack Developer at the Biocomputing Lab of the University of Padua.\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n\r\n                {/* <div style={{ backgroundColor: \"#FFFFFF\", height: 400 }}>\r\n\r\n                </div>\r\n\r\n                <div style={{ backgroundColor: \"var(--color-secondary)\", height: 400 }}>\r\n\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './variables.css'\nimport Landing from './views/Landing';\n\n\n\nfunction App() {\n    return (\n        <Landing>\n\n        </Landing>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}